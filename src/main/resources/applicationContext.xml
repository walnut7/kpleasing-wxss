<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
   	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd  
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd  
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd  
    http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.0.xsd  
  	http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.0.xsd  
   	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd  
  	http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd  
 	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd  
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
    http://www.springframework.org/schema/data/mongo
    http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<description>微信门店扫码配置 </description>
	<context:property-placeholder location="classpath:config/*.properties"/>
	<bean id="dataSource" name="dataSource"	class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
		<property name="maxStatements" value="${jdbc.maxStatements}" />
		<property name="preferredTestQuery" value="${jdbc.preferredTestQuery}" />
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
		<property name="testConnectionOnCheckin" value="${jdbc.testConnectionOnCheckin}" />
		<property name="testConnectionOnCheckout" value="${jdbc.testConnectionOnCheckout}" /> 
	</bean>

	<context:annotation-config />

	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="show_sql">false</prop>
				<prop key="format_sql">true</prop>
				<prop key="hbm2ddl.auto">false</prop>
				<prop key="hibernate.autoReconnect">true</prop>
			</props>
		</property>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.kpleasing.wxss.entity.Order</value>
				<value>com.kpleasing.wxss.entity.CertInfo</value>
				<value>com.kpleasing.wxss.entity.DrivingLicenseInfo</value>
				<value>com.kpleasing.wxss.entity.BankInfo</value>
				<value>com.kpleasing.wxss.entity.PersonInfo</value>
				<value>com.kpleasing.wxss.entity.ContactInfo</value>
				<value>com.kpleasing.wxss.entity.WorkInfo</value>
				<value>com.kpleasing.wxss.entity.FaceVideo</value>
				<value>com.kpleasing.wxss.entity.Config</value>
				<value>com.kpleasing.wxss.entity.SecurityKey</value>
				<value>com.kpleasing.wxss.entity.Car</value>
				<value>com.kpleasing.wxss.entity.CarParam</value>
				<value>com.kpleasing.wxss.entity.Scheme</value>
				<value>com.kpleasing.wxss.entity.SpInfo</value>
				<value>com.kpleasing.wxss.entity.SpSales</value>
				<value>com.kpleasing.wxss.entity.RCarScheme</value>
				<value>com.kpleasing.wxss.entity.DictConfig</value>
				<value>com.kpleasing.wxss.entity.Province</value>
				<value>com.kpleasing.wxss.entity.City</value>
				<value>com.kpleasing.wxss.entity.RSpCar</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<!-- 配置事务增强处理，指定事务管理器 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="load*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 扫描业务层service实现类 -->
	<context:component-scan base-package="com.kpleasing.wxss.**" />
	<context:component-scan base-package="org.springframework.data.mongodb"/>
	<bean id="springContextHolder" class="com.kpleasing.wxss.web.spring.SpringContextHolder"/>
	
    <mongo:mongo-client id="mongo" host="${mongo.host}" port="${mongo.port}" credentials="${mongo.username}:${mongo.password}@${mongo.dbname}">    
    <mongo:client-options write-concern="SAFE"
		    connections-per-host="${mongo.connectionsPerHost}"
		    min-connections-per-host="${mongo.minConnectionsPerHost}"
		    threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
		    connect-timeout="${mongo.connectTimeout}"
		    max-wait-time="${mongo.maxWaitTime}"
		    socket-keep-alive="${mongo.socketKeepAlive}"
		    socket-timeout="${mongo.socketTimeout}"
	/>
    </mongo:mongo-client>   
    <mongo:db-factory  id="mongoDbFactory" dbname="${mongo.dbname}" mongo-ref="mongo" /> 
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">    
       <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />    
    </bean>
</beans>